apply plugin: 'com.android.application'

def useLocalMgloggerAar = rootProject.ext.useLocalMgloggerAar

repositories {
    flatDir {
        dirs 'libs'
    }
}

android {
    compileSdkVersion rootProject.ext.compileSdkVersion

    signingConfigs {
        release {
            storeFile file("release.keystore")
            storePassword "password"
            keyAlias "release_key"
            keyPassword "password"
        }
    }

    defaultConfig {
        applicationId "com.mgtv.mglogger"
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    if (useLocalMgloggerAar) {
        implementation(name: 'mglogger_1.0.0', ext: 'aar')
    } else {
        implementation project(':ljjlogger')
    }
    implementation 'androidx.appcompat:appcompat:1.0.2'
    implementation 'androidx.core:core:1.0.2'
    implementation 'androidx.lifecycle:lifecycle-common:2.0.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
}